{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\ReactJs\\\\router-project\\\\src\\\\pages\\\\QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMYDATA = [{\n  id: 'q1',\n  author: 'chula',\n  text: 'learning react is cool and nice'\n}, {\n  id: 'q2',\n  author: 'Emmanuel',\n  text: 'learning hooks is cool'\n}];\nconst AllQuote = () => {\n  _s();\n  const params = useParams();\n  const quote = DUMMYDATA.find(quote => quote.id === params.quoteId);\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NO quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/quotes/${params.quoteId}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 6\n  }, this);\n};\n_s(AllQuote, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = AllQuote;\nexport default AllQuote;\nvar _c;\n$RefreshReg$(_c, \"AllQuote\");","map":{"version":3,"names":["Fragment","useParams","Route","Link","useRouteMatch","Comments","HighlightedQuote","DUMMYDATA","id","author","text","AllQuote","params","quote","find","quoteId"],"sources":["C:/Users/User/Documents/ReactJs/router-project/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment } from \"react\";\r\nimport { useParams,Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nconst DUMMYDATA=[\r\n    {id:'q1', author:'chula', text:'learning react is cool and nice'},\r\n    {id:'q2', author:'Emmanuel', text:'learning hooks is cool'}\r\n\r\n];\r\nconst AllQuote =()=>{\r\n    const params= useParams();\r\n\r\n    const quote=DUMMYDATA.find(quote=>quote.id===params.quoteId);\r\n    \r\n    if(!quote){\r\n        return <p>NO quote found</p>\r\n    }\r\n    return(\r\n     <Fragment>\r\n           \r\n           <HighlightedQuote text={quote.text} author={quote.author}/>\r\n            <Route path={`/quotes/${params.quoteId}`} exact>\r\n                <div className=\"centered\">\r\n                    <Link className='btn--flat' to={`/quotes/${params.quoteId}/comments`}>Load Comments</Link>\r\n                </div>\r\n            </Route>\r\n            \r\n            <Route path={`/quotes/${params.quoteId}/comments`}>\r\n               <Comments />\r\n            </Route>\r\n     </Fragment>\r\n    )\r\n }\r\n export default AllQuote;\r\n "],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,EAACC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACvE,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AAAC;AACrE,MAAMC,SAAS,GAAC,CACZ;EAACC,EAAE,EAAC,IAAI;EAAEC,MAAM,EAAC,OAAO;EAAEC,IAAI,EAAC;AAAiC,CAAC,EACjE;EAACF,EAAE,EAAC,IAAI;EAAEC,MAAM,EAAC,UAAU;EAAEC,IAAI,EAAC;AAAwB,CAAC,CAE9D;AACD,MAAMC,QAAQ,GAAE,MAAI;EAAA;EAChB,MAAMC,MAAM,GAAEX,SAAS,EAAE;EAEzB,MAAMY,KAAK,GAACN,SAAS,CAACO,IAAI,CAACD,KAAK,IAAEA,KAAK,CAACL,EAAE,KAAGI,MAAM,CAACG,OAAO,CAAC;EAE5D,IAAG,CAACF,KAAK,EAAC;IACN,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB;EAChC;EACA,oBACC,QAAC,QAAQ;IAAA,wBAEH,QAAC,gBAAgB;MAAC,IAAI,EAAEA,KAAK,CAACH,IAAK;MAAC,MAAM,EAAEG,KAAK,CAACJ;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eAC1D,QAAC,KAAK;MAAC,IAAI,EAAG,WAAUG,MAAM,CAACG,OAAQ,EAAE;MAAC,KAAK;MAAA,uBAC3C;QAAK,SAAS,EAAC,UAAU;QAAA,uBACrB,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,WAAUH,MAAM,CAACG,OAAQ,WAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAqB;QAAA;QAAA;QAAA;MAAA;IACxF;MAAA;MAAA;MAAA;IAAA,QACF,eAER,QAAC,KAAK;MAAC,IAAI,EAAG,WAAUH,MAAM,CAACG,OAAQ,WAAW;MAAA,uBAC/C,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACP;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEf,CAAC;AAAA,GAvBIJ,QAAQ;EAAA,QACIV,SAAS;AAAA;AAAA,KADrBU,QAAQ;AAwBb,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}